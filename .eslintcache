[{"/Volumes/caseSensitive/testPro/yamlVisualEditor/src/reportWebVitals.js":"1","/Volumes/caseSensitive/testPro/yamlVisualEditor/src/App.js":"2","/Volumes/caseSensitive/testPro/yamlVisualEditor/src/index.tsx":"3","/Volumes/caseSensitive/testPro/yamlVisualEditor/src/views/app.tsx":"4"},{"size":362,"mtime":1610330770822,"results":"5","hashOfConfig":"6"},{"size":528,"mtime":1610330770822,"results":"7","hashOfConfig":"6"},{"size":141,"mtime":1610530267514,"results":"8","hashOfConfig":"9"},{"size":2529,"mtime":1610354690378,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"pf9nvh",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qlbork",{"filePath":"18","messages":"19","errorCount":7,"warningCount":3,"fixableErrorCount":5,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"/Volumes/caseSensitive/testPro/yamlVisualEditor/src/reportWebVitals.js",[],["22","23"],"/Volumes/caseSensitive/testPro/yamlVisualEditor/src/App.js",[],"/Volumes/caseSensitive/testPro/yamlVisualEditor/src/index.tsx",[],"/Volumes/caseSensitive/testPro/yamlVisualEditor/src/views/app.tsx",["24","25","26","27","28","29","30","31","32","33"],"import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { Router, hashHistory, PlainRoute, Route } from 'react-router'\nimport { syncHistoryWithStore } from 'react-router-redux'\nimport * as importHistory from \"history\"\nconst createHistory = importHistory['createBrowserHistory']\nimport \"antd/dist/antd.less\";\nimport '@ant-design/compatible/assets/index.css';\nimport configureStore from 'src/store/configure-store'\nimport configureRoutes from 'src/editor'\nimport { Button, notification, Divider } from 'antd';\n\nconst store = configureStore({})\nwindow['store'] = store\nconst createdHistory = createHistory()\n\nconst unlisten = createdHistory.listen((location, action) => {\n  // location is an object like window.location\n  // console.log('createdHistory', action, location)\n})\n\nconst history = syncHistoryWithStore(hashHistory, store)\nconst routes: PlainRoute = configureRoutes(store)\nconst errorKey = 'App -> componentDidCatch: '\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.log(\"App -> componentDidCatch -> error\", error)\n    // if (Envirenments.DEV) {\n    //   // console.log(errorKey, error, errorInfo)\n    // } else {\n    localStorage.setItem(errorKey, JSON.stringify({\n      error: {\n        message: error.message,\n        name: error.name,\n        stack: error.stack\n      }, info: errorInfo\n    }))\n    location.href = location.pathname;\n    // }\n  }\n\n  showError(error: Error, info: React.ErrorInfo) {\n    console.error(errorKey, error, info)\n    const key = `open${Date.now()}`;\n    notification.open({\n      message: '遇到错误',\n      duration: 30,\n      description: <div>\n        <p>{error.message}</p>\n        <pre style={{ whiteSpace: 'pre-wrap' }}>{error.stack}</pre>\n      </div>,\n      btn: <span>\n        <Divider type='vertical' />\n        <Button type=\"primary\" size=\"small\" onClick={() => {\n          notification.close(key)\n        }}>确定</Button>\n      </span>,\n      key,\n    });\n  }\n\n  componentDidMount() {\n    const json = localStorage.getItem(errorKey)\n    if (json) {\n      localStorage.removeItem(errorKey);\n      try {\n        const info = JSON.parse(json)\n        info && info.error && this.showError(info.error, info.info);\n      } catch (error) {\n        // -\n      }\n    }\n  }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router history={history} >\n          {routes}\n        </Router>\n      </Provider>\n    )\n  }\n}\n",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":43,"nodeType":"42","messageId":"43","endLine":3,"endColumn":48},{"ruleId":"44","severity":2,"message":"45","line":7,"column":1,"nodeType":"46","endLine":7,"endColumn":30,"fix":"47"},{"ruleId":"44","severity":2,"message":"45","line":8,"column":1,"nodeType":"46","endLine":8,"endColumn":50,"fix":"48"},{"ruleId":"44","severity":2,"message":"45","line":9,"column":1,"nodeType":"46","endLine":9,"endColumn":55,"fix":"49"},{"ruleId":"44","severity":2,"message":"45","line":10,"column":1,"nodeType":"46","endLine":10,"endColumn":41,"fix":"50"},{"ruleId":"44","severity":2,"message":"45","line":11,"column":1,"nodeType":"46","endLine":11,"endColumn":54,"fix":"51"},{"ruleId":"40","severity":1,"message":"52","line":17,"column":7,"nodeType":"42","messageId":"43","endLine":17,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":27,"column":3,"nodeType":"55","messageId":"56","endLine":30,"endColumn":4},{"ruleId":"57","severity":2,"message":"58","line":44,"column":5,"nodeType":"42","messageId":"59","endLine":44,"endColumn":13},{"ruleId":"57","severity":2,"message":"58","line":44,"column":21,"nodeType":"42","messageId":"59","endLine":44,"endColumn":29},{"ruleId":"36","replacedBy":"60"},{"ruleId":"38","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"64","text":"65"},{"range":"66","text":"65"},{"range":"67","text":"65"},{"range":"68","text":"65"},{"range":"69","text":"70"},"'unlisten' is assigned a value but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-restricted-globals","Unexpected use of 'location'.","defaultMessage",["62"],["63"],"no-global-assign","no-unsafe-negation",[328,328],"",[378,378],[433,433],[474,474],[0,528],"import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { Router, hashHistory, PlainRoute, Route } from 'react-router'\nimport { syncHistoryWithStore } from 'react-router-redux'\nimport * as importHistory from \"history\"\nimport \"antd/dist/antd.less\";\nimport '@ant-design/compatible/assets/index.css';\nimport configureStore from 'src/store/configure-store'\nimport configureRoutes from 'src/editor'\nimport { Button, notification, Divider } from 'antd';\nconst createHistory = importHistory['createBrowserHistory']"]